0_0001_0_100	//LDR r0, [r1]
0_0001_0_001	//MOV r0, r1
0_0010_0_100	//LDR r0, [r2]
0_0010_0_001	//MOV r0, r2
0_0011_0_100	//LDR r0, [r3]
0_0011_0_001	//MOV r0, r3
0_1111_0_100	//LDR r0, [r15]
0_0001_0_110	//CMP r0, r1		loopSpace:
1_0010_1_001	//BEQ Message (9->52)       
0_0101_0_100	//LDR r0, [r5]         
0_0011_0_010	//XOR r0, r0, r3		
0_0100_0_111	//STR r0, [r4]	
0_1111_0_100	//LDR r0, [r15]		
0_0100_0_000	//ADD r0, r0, r4		
1_0001_0_000	//ADD r0, r0, #1		
0_0100_0_001	//MOV r0, r4		
0_1111_0_100	//LDR r0, [r15]	
0_0011_0_000	//ADD r0, r0, r3	
0_0010_0_011	//AND r0, r0 ,r2	
0_0110_0_001	//MOV r0, r6	
0_0111_0_011	//AND r0, r0, r7     	
0_1000_0_001	//MOV r0, r8	
1_0111_0_110	//CMP r0, #7		loopLFSR:
1_0110_1_001	//BEQ afterLFSR (24->35)		
0_0111_0_101	//LSL r0, r7, #1 		
0_0111_0_001	//MOV r0, r7 		
0_0101_0_011	//AND r0, r0, r6
0_1000_0_010	//XOR r0, r0, r8		
0_1000_0_001	//MOV r0, r8
0_1111_0_100	//LDR r0, [r15]	
0_1110_0_000	//ADD r0, r0, r14	
1_0001_0_000	//ADD r0, r0, #1	
0_1110_0_001	//MOV r0, r14	 
1_0101_1_000	//B loopLFSR	(34->23)	
0_1111_0_100    //LDR r0, [r15]	afterLFSR:	
0_1110_0_001	//MOV r0, r14		
0_0111_0_001	//MOV r0, r7	
1_0001_0_000	//ADD r0, r0, #1
0_0111_0_001	//MOV r0, r7	
0_0011_0_101	//LSL r0, r3, #1		
0_1000_0_000	//ADD r0, r0, r8	
0_0011_0_001	//MOV r0, r3
0_1111_0_100	//LDR r0, [r15]
0_1000_0_001	//MOV r0, r8
0_1101_0_000	//ADD r0, r0, r13		
1_0001_0_000	//ADD r0, r0, #1	
0_1101_0_001	//MOV r0, r13	
0_1111_0_100	//LDR r0, r[15]	
0_1001_0_000	//ADD r0, r0, r9	
1_0001_0_000	//ADD r0, r0, #1	
0_1001_0_001	//MOV r0, r0, r9
1_0100_1_000	//B loopSpace	(52->8)
0_1111_0_100	//LDR r0, [r15]	Message:
0_1101_0_001	//MOV r0, r13
0_0101_0_001	//MOV r0, r5
1_0011_0_110	//CMP r0, #64		loopMessage:
1_1110_1_001	//BEQ endMessage (57->140)		
0_1111_0_100	//LDR r0, r[15]
0_0101_0_000	//ADD r0, r0, r5
1_0000_0_110	//CMP r0, #52
1_1011_1_001	//BEQ extraSpaces (61->105)
0_0101_0_100	//LDR r0, [r5]	
0_0011_0_010	//XOR r0, r0, r3	
0_0100_0_111	//STR r0, [r4]	
0_1111_0_100	//LDR r0, [r15]	
0_0100_0_000	//ADD r0, r0, r4	
1_0001_0_000	//ADD r0, r0, #1	
0_0100_0_001	//MOV r0, r4	
0_1111_0_100	//LDR r0, [r15]	
0_0011_0_000	//ADD r0, r0, r3	
0_0010_0_011	//AND r0, r0 ,r2	
0_0110_0_001	//MOV r0, r6	
0_0111_0_011	//AND r0, r0, r7   
0_1000_0_001	//MOV r0, r8
1_0111_0_110	//CMP r0, #7 		loopLFSR_msg:
1_1010_1_001	//BEQ afterLFSR_msg (76->87)
0_0111_0_101	//LSL r0, r7, #1  		
0_0111_0_001	//MOV r0, r7   		
0_0110_0_011	//AND r0, r0, r6
0_1000_0_010	//XOR r0, r0, r8
0_1000_0_001	//MOV r0, r8
0_1111_0_100	//LDR r0, [r15]
0_1110_0_000	//ADD r0, r14
1_0001_0_000	//ADD r0, r0, #1
0_1110_0_001	//MOV r0, r14
1_1001_1_000	//B loopLFSR_msg (86->75)	
0_1111_0_100	//LDR r0, [r15]	afterLFSR_msg:
0_1110_0_001		//MOV r0, r14		
0_0111_0_001		//MOV r0, r7	
1_0001_0_000	//ADD r0, r0, #1
0_0111_0_001		//MOV r0, r7
0_0011_0_101		//LSL r0, r3, #1	
0_1000_0_000	//ADD r0, r0, r8
0_0011_0_001		//MOV r0, r3	
0_1111_0_100		//LDR r0, [r15]
0_1000_0_001	//MOV r0, r8		
0_0101_0_000	//ADD r0, r0, r5
1_0001_0_000	//ADD r0, r0, #1	
0_0101_0_001	//MOV r0, r0, r5	
0_1111_0_100		//LDR r0, r[15]	
0_1001_0_000	//ADD r0, r0, r9	
1_0001_0_000	//ADD r0, r0, #1	
0_1001_0_001	//MOV r0, r0, r9		
1_1000_1_000	//B loopMessage (104->56)
1_0011_0_110	//CMP r0, #64		extraSpaces:  
1_1110_1_001	//BEQ endMessage (106->140)
0_1111_0_100	//LDR r0, [r15]
0_1010_0_000	//ADD r0, r0, r10
0_0011_0_010	//XOR r0, r0, r3
0_0100_0_111	//STR r0, [r4]
0_1111_0_100	//LDR r0, [r15]
0_0100_0_000	//ADD r0, r0, r4
1_0001_0_000	//ADD r0, r0, #1
0_0100_0_001	//MOV r0, r4
1_0111_0_110	//CMP r0, #7		loopLFSR_extra:
1_1101_1_001	//BEQ after_loopLFSR_extra (116->127)
0_0111_0_101	//LSL r0, r7, #1		
0_0111_0_001	//MOV r0, r7	
0_0110_0_011	//AND r0, r0, r6
0_1000_0_010	//XOR r0, r0, r8
0_1000_0_001	//MOV r0, r8
0_1111_0_100	//LDR r0, [r15]	
0_1110_0_000	//ADD r0, r14	
1_0001_0_000	//ADD r0, r0, #1
0_1110_0_001	//MOV r0, r14	
1_1100_1_000	//B loopLFSR_extra	(126->115)
0_1111_0_100	//LDR r0, [r15]	after_loopLFSR_extra: 		
0_1110_0_001	//MOV r0, r14		
0_0111_0_001	//MOV r0, r7		
1_0001_0_000	//ADD r0, r0, #1	
0_0111_0_001	//MOV r0, r7	
0_0011_0_101	//LSL r0, r3, #1	
0_1000_0_000	//ADD r0, r0, r8		
0_0011_0_001	//MOV r0, r3	
0_1111_0_100	//LDR r0, r[15]		
0_1001_0_000	//ADD r0, r0, r9		
1_0001_0_000	//ADD r0, r0, #1
0_1001_0_001	//MOV r0, r0, r9
1_1011_1_000 	//B extraSpaces (139->105)
0_1111_0_100	//LDR r0, [r15]	endMessage:


